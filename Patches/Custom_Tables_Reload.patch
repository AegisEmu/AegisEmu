Index: Level3.cpp
===================================================================
--- Level3.cpp	(revision 1004)
+++ Level3.cpp	(working copy)
@@ -1143,10 +1143,13 @@
 	return true;
 }
 
+vector<pair<string,string> > AddedTables;
+
 bool ChatHandler::HandleDBReloadCommand(const char* args, WorldSession* m_session)
 {
 	char str[200];
 	int ret = 0;
+	int ret2 = 1;
 
 	if(!*args || strlen(args) < 3)
 		return false;
@@ -1169,10 +1172,40 @@
 	else
 	{
 		ret = Storage_ReloadTable(args);
+		string strData = Config.MainConfig.GetStringDefault("Startup", "LoadAdditionalTables", "");
+		if(!strData.empty())
+		{
+			vector<string> strs = StrSplit(strData, ",");
+			if(!strs.empty())
+			{
+				for(vector<string>::iterator itr = strs.begin(); itr != strs.end(); ++itr)
+				{
+					char s1[200];
+					char s2[200];
+					if(sscanf((*itr).c_str(), "%s %s", s1, s2) != 2)
+						continue;
+					if(s2 == args)
+					{
+						if(LoadAdditionalTable(s2, s1)) 
+						{
+							ret2 = 1;
+							pair<string,string> tmppair;
+							tmppair.first = string(s1);
+							tmppair.second = string(s2);
+							AddedTables.push_back(tmppair);
+						}
+						else
+							ret2 = 0;
+					}
+				}
+			}
+		}
 	}
 
 	if (ret == 0)
 		snprintf(str, 256, "%sDatabase reload failed.", MSG_COLOR_LIGHTRED);
+	else if (ret2 == 0)
+		snprintf(str, 256, "%sCustom database reload failed.", MSG_COLOR_LIGHTRED);
 	else
 		snprintf(str, 256, "%sDatabase reload completed in %u ms.", MSG_COLOR_LIGHTBLUE, (unsigned int)(getMSTime() - mstime));
 	sWorld.SendWorldText(str, 0);
@@ -2081,6 +2114,7 @@
 
 	CreatureProto * proto = CreatureProtoStorage.LookupEntry(entry);
 	CreatureInfo * info = CreatureNameStorage.LookupEntry(entry);
+
 	if(proto == 0 || info == 0)
 	{
 		RedSystemMessage(m_session, "Invalid entry id.");
Index: ObjectStorage.h
===================================================================
--- ObjectStorage.h	(revision 1004)
+++ ObjectStorage.h	(working copy)
@@ -40,6 +40,7 @@
 bool Storage_ReloadTable(const char * TableName);
 void Storage_LoadAdditionalTables();
 
+bool LoadAdditionalTable(const char * TableName, const char * SecondName);
 extern SERVER_DECL set<string> ExtraMapCreatureTables;
 extern SERVER_DECL set<string> ExtraMapGameObjectTables;
 
